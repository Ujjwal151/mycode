//https://leetcode.com/problems/minimum-score-triangulation-of-polygon/
//Minimum Score Triangulation of polygon
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
void init(){ 
    ios_base::sync_with_stdio(0), cin.tie(0); 
    #ifndef ONLINE_JUDGE 
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout); 
    #endif
    #define nl "\n"
    #define o2(a, b) cout << a << " " << b << "\n";
    
    #define inVec(v) for(auto &x: v) cin >> x;
    #define outVec(v) for(auto &x: v) cout<< x <<" "; cout<<"\n";
    #define in2dVec(v) for(int i = 0; i<v.size(); i++){ for(int j = 0; j < v[0].size(); j++){ cin >> v[i][j];}}
    #define out2dVec(v){for(auto &x : v){ for(auto &y: x){ cout<<y<<" ";} cout<<"\n";}}
}

vector<vector<int> > dp(100,vector<int> (100,-1));
int f(vector<int> &v, int i, int j){
    if(i+1 == j) return 0;
    if(dp[i][j] != -1) return dp[i][j];
    int ans = INT_MAX;
    for(int k = i+1; k < j; k++){
        ans = min(ans, f(v, i, k) + v[i]*v[k]*v[j] + f(v, k, j));
    }
    return dp[i][j] = ans;
}

int main()
{init();

    vector<int> v {1,2,3,4};
    cout<<f(v, 0, v.size()-1);
}