//509.Fibonacci Number
//https://leetcode.com/problems/fibonacci-number
#include <bits/stdc++.h>
using namespace std;
const int N = 10000007;
vector<int> dp(N);
// 0 1 2 3 4 5 6 7  8  9  10
// 0 1 1 2 3 5 8 13 21 34 55
int fibRec(int n){
    //base case
    if(n <= 1) return n;
    //dp direct retrun
    if(dp[n] != 0) return dp[n];
    //memoization
    return dp[n] = fibRec(n-1) + fibRec(n-2);
}

int fibIter(int n){
    //base case initialization
    dp[0] = 0, dp[1] = 1;
    //Iteration
    for(int i = 2; i<N; i++){
        dp[i] = dp[i-1] + dp[i-2];
    }
    //Return
    return dp[n];
}

int fibISpOpt(int n){
    int prev2 = 0, prev1 = 1;
    if(n <= 1) return n;
    for(int i = 2; i<=n; i++){
        int cur = prev1 + prev2;
        prev2 = prev1;
        prev1 = cur;
    }
    return prev1;
}

int main()
{ 
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout); 
    int n = 10;
    cout<<fibRec(n)<<"\n";
    cout<<fibIter(n)<<"\n";
    cout<<fibISpOpt(n)<<"\n";
}
