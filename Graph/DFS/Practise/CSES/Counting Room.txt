//CSES Counting Room    [DFS : counting connected component]
//https://cses.fi/problemset/task/1192
#include<bits/stdc++.h>
using namespace std;
const int N = 1e6;
vector<vector<int> > adj(N);
vector<bool> vis(N);

void dfs(int u){
    vis[u] = 1;
    for(auto v : adj[u]){
        if(!vis[v]) dfs(v);
    }
}

void solve()
{
    int n,m;
    cin >> n >>m;
    char mat[n][m];
    for(int i = 0; i<n; i++){
        for(int j = 0; j<m; j++){
            char c; cin >> c;
            mat[i][j] = c;
            if(c == '.'){
                int u = i*1000 + j;
                adj[u].push_back(u);
                if(i - 1 >= 0 && mat[i-1][j] == '.'){
                    int v = (i-1)*1000 + j;
                    adj[u].push_back(v);
                    adj[v].push_back(u);
                }
                if(j - 1 >= 0 && mat[i][j-1] == '.'){
                    int v = i*1000 + j - 1;
                    adj[u].push_back(v);
                    adj[v].push_back(u);
                }
            }
        }
    }

    // print(adj);
    int cnt = 0;
    for(int i = 0; i<N; i++){
        if(adj[i].size() && !vis[i]){
            dfs(i); ++cnt;
        }
    }
    cout<<cnt;
return;
}
    
int32_t main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    #endif  
        solve(); cout<<'\n';
    return 0;
}

/*
Input
10 10
####.###..
#.######.#
##.######.
###.###..#
##.####..#
#####..###
#.########
#.####.#.#
#####..##.
######.###

Output
13
*/