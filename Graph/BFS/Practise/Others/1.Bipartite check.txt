//BFS | Bipertite Check | (Disconnected component)
//BPT Graph : No add cycle exits

#include<bits/stdc++.h>
using namespace std;
const int N = 1e7+10;
vector<int>adj[N];
vector<int>side(N,-1);

bool isBP(int src)
{
    queue<int>q;
    q.push(src);
    side[src] = 1;

    while(!q.empty())
    {
        int vertex = q.front();
        q.pop();

        for(auto child : adj[vertex])
        {
            if(side[child] == -1)
            {
                q.push(child);
                side[child] = side[vertex]^1;
            }
            else if(side[child] == side[vertex])
            {
                return false;
            }
        }
    }

    return true;
}


bool isBipartite(int V){
    for(int i = 1; i<=V; i++){ // Vertices are from 1 to V
        if(side[i] == -1){
            if(isBP(i) == false){
                return false;
            }
        }
    }
    return true;
}

int main(){
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

    int V, E;
    cin >> V >> E;
    for(int i = 0; i < E; i++){
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    cout<<isBipartite(V);
	return 0;
}

/*
input
4 5
1 2
1 4
2 3
3 4
1 3
output
0
*/