//Array Queries
//https://lightoj.com/problem/array-queries
#include<bits/stdc++.h>
using namespace std;
void init()
{
    ios_base::sync_with_stdio(0), cin.tie(0);
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
}
#define o(x) cout<<x<<"\n";
#define o2(x,y) cout<<x<<" "<<y<<"\n";
#define o3(x,y,z) cout<<x<<" "<<y<<" "<<z<<"\n";

const int arraysize = 100001;
int arr[arraysize];
vector<int> tree(4*arraysize);

void initial(int node, int b, int e){
    if(b == e){ tree[node] = arr[b]; return; }
    int left = node*2, right = left + 1, mid = (b+e)/2;
    initial(left,b,mid); initial(right,mid+1,e);
    tree[node] = min(tree[left] , tree[right]);
}

int query(int node, int b, int e, int i, int j){
    if(j < b || e < i) return 100000;
    if(i <= b && e <= j) return tree[node];
    int left = node*2, right = left + 1, mid = (b+e)/2;
    return min(query(left,b,mid,i,j), query(right,mid+1,e,i,j));
}

int32_t main()
{init();
    int t; cin >> t;
    int tc = 0;
    while(tc++ < t)
    {
        cout<<"Case "<<tc<<":\n";
        int n, q; cin >> n >> q;
        for(int i = 1; i <=n; i++){
            cin >> arr[i];
        }

        initial(1,1,n);

        while(q--)
        {
            int i, j; cin >> i >> j;
            cout<<query(1,1,n, i, j)<<"\n";
        }   
    }
}